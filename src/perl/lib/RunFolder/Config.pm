#!/usr/bin/env perl

=head1 LICENSE

Copyright (c) 2014 Illumina, Inc.

This file is part of Illumina's Enhanced Artificial Genome Engine (EAGLE),
covered by the "BSD 2-Clause License" (see accompanying LICENSE file)

=head1 NAME

RunFolder::Config - A config generator

Library for the manipulation of configurations (including the main Makefile).

=head1 VERSION

EAGLE vB<@EAGLE_VERSION@>

=head1 DESCRIPTION

Does what it says on the tin.

=head1 AUTHOR

Mauricio Varea

=head1 SYNOPSIS

  use RunFolder::Config;
  ...
  my $config = RunFolder::Config->new();
  ... do stuff ...
  $config->generateMakefile($outputHandle);

=cut

package RunFolder::Config;

=head1 DESCRIPTION

=head2 Overview

Provides a number of configuration-related services for EAGLE;

=head2 Dependencies

  strict, warnings, Carp, Exporter, XML::Simple, Data::Dumper

=cut

use strict;
use warnings "all";
use Carp;
use Exporter 'import';
use XML::Simple;
use Data::Dumper;

=head2 Exports

  &new, $Header

=cut

our @EXPORT_OK = qw(&new $Header);
our $Header = <<EOH;
################################################################################
##
## Copyright (c) 2014 Illumina, Inc.
##
## This file is part of Illumina's Enhanced Artificial Genome Engine (EAGLE),
## covered by the "BSD 2-Clause License" (see accompanying LICENSE file)
##
## description Main makefile to kick off simulation.
##
## author      Mauricio Varea
##
################################################################################
EOH

my $DEBUG         = '@EAGLE_DEBUG_MODE@';

=head2 Methods

=item new(;$)

Constructor

=cut

sub new(;$)
{
    my $proto = shift;
    my $class = ref($proto) || $proto;
    my $self  = {};

    $self->{ID}            = '@EAGLE_VERSION_FULL@';
    $self->{CONFIGURATION} = {};
    $self->{ORDER}         = [];

    bless ($self, $class);
    return $self;
}

=item id($;$)

Either obtains or fills the ID tag.

=cut

sub id($;$)
{
    my $self = shift;
    if (@_) { $self->{ID} = shift; }
    return $self->{ID};
}

=item id($;$)

Outputs a Makefile based on data already loaded.

=cut

sub generateMakefile($$$)
{
    my $self     = shift;
    my $handle   = shift;
    my $workflow = shift;

    print Dumper($self->{CONFIGURATION})  if $DEBUG;
    my @config = map{ "$_ := ".join(' ', @{$self->{CONFIGURATION}->{$_}}) }
                 @{$self->{ORDER}};
    print $handle "$Header\n";
    print $handle "# This file was automatically generated by $self->{ID}. Please do not edit.\n";
    print $handle "# For technical assistance, please contact the Illumina Customer Support team\n";
    print $handle "# <techsupport\@illumina.com> and send them this file.\n\n";
    print $handle join "\n", @config;
    print $handle "\n\ninclude \$(MAKEFILES_DIR)/${workflow}.mk\n";
}

=item declare($$$)

Adds assignment to the list to configure.

B<Parameters:>

  $lhs - Variable name
  $rhs - Value

B<Returns:>

    N/A

=cut

sub declare($$$)
{
    my ($self,$lhs,$rhs) = @_;
    push @{$self->{ORDER}}, $lhs  unless exists $self->{CONFIGURATION}->{$lhs};
    push @{$self->{CONFIGURATION}->{$lhs}}, $rhs;
}


1;
__END__

=head1 BUGS AND LIMITATIONS

There are no known bugs in this module.

All documented features are fully implemented.

Please report problems to Illumina Technical Support (support@illumina.com)

Patches are welcome.

=cut
